package com.moderco.moder;

import java.io.IOException;

import android.app.Activity;
import android.content.Context;
import android.content.pm.PackageManager;
import android.hardware.Camera;
import android.os.Bundle;
import android.util.Log;
import android.view.SurfaceHolder;
import android.view.SurfaceView;

public class CameraActivity extends Activity {
	
	@Override
	public void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_camera);
		
		Camera camera = getCamera();
		CameraPreview preview = new CameraPreview(this, camera);
		//Add it to a layout
	}

	public static boolean hasCamera(Context context) {
		return context.getPackageManager().hasSystemFeature(PackageManager.FEATURE_CAMERA);
	}
	
	public static Camera getCamera(){
		@SuppressWarnings("deprecation")
		Camera camera = Camera.open();
		return camera;
	}
	
	private class CameraPreview extends SurfaceView implements SurfaceHolder.Callback {

		private SurfaceHolder hold;
		private Camera camera;
		
		public CameraPreview(Context context, Camera c) {
			super(context);
			camera = c;
			
			hold = getHolder();
			hold.addCallback(this);
		}

		@Override
		public void surfaceCreated(SurfaceHolder holder) {
			try {
				camera.setPreviewDisplay(holder);
				camera.startPreview();
			} catch (IOException e) {
				Log.e("ModerCameraHandler", e.getMessage());
				e.printStackTrace();
			}
			
		}

		@Override
		public void surfaceChanged(SurfaceHolder holder, int format, int width,
				int height) {
			if (holder.getSurface() == null) {
				return; //Doesn't exist
			}
			
			//Restart preview
			camera.stopPreview();
			try {
				camera.setPreviewDisplay(hold);
				camera.startPreview();
			} catch (IOException e) {
				Log.e("ModerCameraHandler", e.getMessage());
				e.printStackTrace();
			}
			
			
		}

		@Override
		public void surfaceDestroyed(SurfaceHolder holder) {
			
		}
		
	}
	
}
