package com.moderco.network;

import java.io.BufferedReader;
import java.io.DataOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.URL;

import org.apache.http.cookie.Cookie;

import android.os.AsyncTask;
import android.util.Log;

public class SendPhotosTask extends AsyncTask<Void, Void, Integer>{
	
	//codes
	public static final int FILE_DOES_NOT_EXIST = 100;
	public static final int SUCCESS = 300;
	File photo;
	String unique_id_string;
	
	public SendPhotosTask(File file, String cookie) {
		photo = file;
		unique_id_string = cookie;
	}
	
	@Override
	protected Integer doInBackground(Void... params) {
		int code = -1;
		
		HttpURLConnection connection = null;
        DataOutputStream dos = null;  
        String boundary = "*****";
        int bytesRead, bytesAvailable, bufferSize;
        String lineEnd = "\r\n";
        byte[] buffer;
        String twoHyphens = "--";
        int maxBufferSize = 1 * 1024 * 1024; 
		
		
		if (!photo.isFile()) {
			code = FILE_DOES_NOT_EXIST;
		} else {
			try {
				FileInputStream fileInputStream = new FileInputStream(photo);
				URL url = new URL(URLS.SUBMIT_PHOTO_URL_STRING);
				
				connection = (HttpURLConnection) url.openConnection();
				connection.setDoInput(true); 
                connection.setDoOutput(true); 
                connection.setUseCaches(false);
                connection.setRequestMethod("POST");
                connection.setRequestProperty("Connection", "Keep-Alive");
                connection.setRequestProperty("ENCTYPE", "multipart/form-data");
                connection.setRequestProperty("Content-Type", "multipart/form-data;boundary=" + boundary);
                connection.setRequestProperty("uploaded_file", photo.getName());
                connection.setRequestProperty("Cookie", unique_id_string);
                Log.v("Cookie", unique_id_string);
                
                dos = new DataOutputStream(connection.getOutputStream());
                dos.writeBytes(twoHyphens + boundary + lineEnd); 
                dos.writeBytes("Content-Disposition: form-data; name=\"uploaded_file\";filename=\""
                                    + photo.getName() + "\"" + lineEnd);
                dos.writeBytes(lineEnd);
                
                //Buffer
                bytesAvailable = fileInputStream.available(); 
                bufferSize = Math.min(bytesAvailable, maxBufferSize);
                buffer = new byte[bufferSize];
                
                bytesRead = fileInputStream.read(buffer, 0, bufferSize);   
                
                //Send multipart form data after form data
                dos.writeBytes(lineEnd);
                dos.writeBytes(twoHyphens + boundary + twoHyphens + lineEnd);
                
                code = connection.getResponseCode();
                String message = connection.getResponseMessage();
                
                BufferedReader in = new BufferedReader(new InputStreamReader(
                        connection.getInputStream()));
                String inputLine;
                String someMessage = "";
                while ((inputLine = in.readLine()) != null) 
                		someMessage += inputLine;
                in.close();
                
                Log.v("PhotoSentMessage", someMessage);
                
                //close the streams 
                fileInputStream.close();
                dos.flush();
                dos.close();
                
                return code;
			} catch (FileNotFoundException e) {
				e.printStackTrace();
			} catch (MalformedURLException e) {
				e.printStackTrace();
			} catch (IOException e) {
				e.printStackTrace();
			}
			
		}

		
		return code; //Returns unknown error code
	}

	
}
